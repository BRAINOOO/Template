
struct node
{
    ll no,w;

    node(ll no,ll w) : no(no),w(w) {}

    bool operator < ( const node &e) const
    {
        return w> e.w;
    }
};

void dijkstra(vector<vector<node> > v,ll s,ll tar)
{


    clr(dist,-1);
    clr(pre,-1);
    priority_queue< node > pq;

    pq.push(node(s,0));
    pre[s]=-1;
    while(!pq.empty())
    {

       node cur=pq.top();
       pq.pop();

       if(dist[cur.no]!=-1)
        continue;

       dist[cur.no]=cur.w;
       if(cur.no==tar)
        return ;

      ll add=dist[cur.no];

      for(int i=0;i<sz(v[cur.no]);i++)
      {

          node nw=v[cur.no][i];

          if(dist[nw.no]==-1)
          {
             pq.push(node(nw.no,add+nw.w));
             pre[nw.no]=cur.no;
          }

      }
    }
}


